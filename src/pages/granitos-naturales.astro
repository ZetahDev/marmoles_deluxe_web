---
import Layout from "../layouts/Layout.astro";
import ProductCard from "../components/ProductCard.tsx";
import PageLoader from "../components/PageLoader.tsx";
import SEOSchemaData from "../components/SEOSchemaData.tsx";
import { listStonesFromS3, type Stone } from "../lib/utils/s3Utils";

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const pageUrl = canonicalURL.toString();
const metaImage = new URL('/images/contactanos-og.jpg', Astro.site).toString();
const title = "Granitos Naturales Cali - Mármoles Deluxe | Encimeras Durables";
const description = "Explora nuestra colección de granitos naturales de alta calidad para encimeras, pisos y superficies. Material elegante y duradero para tu hogar u oficina.";

const keywords =
  "granitos naturales Cali, granito negro, granito blanco, encimeras granito Cali, pisos granito, granito cocina, granito baño, granito brasileño, instalación granito Valle del Cauca";

// Fetch granite data at build time
const granitosNaturales = await listStonesFromS3('GRANITOS+NATURALES');

// Configurar datos para schema.org
const schemaStones = granitosNaturales.map((stone: Stone) => ({
  name: stone.name,
  image: stone.image
}));
---

<Layout title={title} description={description}>
  <Fragment slot="head">
    <!-- SEO Meta Tags -->
    <meta name="keywords" content={keywords} />
    <link rel="canonical" href={canonicalURL} />
    <meta name="robots" content="index, follow" />
    <meta name="author" content="Mármoles Deluxe" />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:locale" content="es_CO" />
    <meta property="og:site_name" content="Mármoles Deluxe" />

    <!-- Twitter Cards -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />

    <!-- Geo Tags -->
    <meta name="geo.region" content="CO-VAC" />
    <meta name="geo.placename" content="Cali" />
    <meta name="geo.position" content="3.4516;-76.5320" />
    <meta name="ICBM" content="3.4516, -76.5320" />
  </Fragment>
  
  <!-- Agregar datos estructurados schema.org para SEO -->
  <SEOSchemaData 
    client:load
    pageTitle={title}
    pageDescription={description}
    pageUrl={pageUrl}
    pageImage={metaImage}
    category="Granitos Naturales"
    stones={schemaStones}
  />

  <PageLoader client:load isLoading={true} />
  <main class="py-20 pt-24">
    <div class="container mx-auto px-4">
      <h1 class="text-4xl md:text-5xl font-bold text-center mb-12">
        Granitos Naturales
      </h1>

      <div
        class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-8 mb-16"
        id="granitos-grid"
      >
        {
          granitosNaturales.map((stone: Stone) => (
            <ProductCard
              client:load
              name={stone.name}
              description="Granito natural de alta calidad"
              images={[stone.image, stone.design]}
              features={[
                "Resistente a manchas",
                "Alta durabilidad",
                "Elegancia natural",
                "Resistente al calor",
              ]}
              slug={stone.name.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '')}
            />
          ))
        }
      </div>
    </div>
  </main>
</Layout>

<script>
  import { initModal } from '../scripts/modal';
  initModal();

  // --- Abrir modal automáticamente por parámetro 'material' ---
  if (typeof window !== 'undefined') {
    window.addEventListener('DOMContentLoaded', () => {
      const params = new URLSearchParams(window.location.search);
      const material = params.get('material');
      if (material) {
        setTimeout(() => {
          const event = new CustomEvent('modal-state-change', {
            detail: { id: material }
          });
          document.dispatchEvent(event);
        }, 500);
      }
    });
  }
</script>